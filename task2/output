apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"Asilbek","project":"practice"},"name":"nginx1","namespace":"s-40"},"spec":{"containers":[{"image":"nginx","name":"nginx1"}]}}
    creationTimestamp: "2024-01-08T14:45:50Z"
    labels:
      author: Asilbek
      project: practice
    name: nginx1
    namespace: s-40
    resourceVersion: "4023442"
    uid: 2f487c7a-274a-4735-860f-8b734be22049
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qdbrg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qdbrg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:45:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:45:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:45:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:45:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://426f070d6736fb48e3692e698e69d770b64a18440c201a0774921f1ac6188fda
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:2bdc49f2f8ae8d8dc50ed00f2ee56d00385c6f8bc8a8b320d0a294d9e3b49026
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-08T14:45:51Z"
    hostIP: 95.217.135.101
    phase: Running
    podIP: 10.233.65.186
    podIPs:
    - ip: 10.233.65.186
    qosClass: BestEffort
    startTime: "2024-01-08T14:45:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"Asilbek","project":"practice"},"name":"nginx2","namespace":"s-40"},"spec":{"containers":[{"image":"nginx","name":"nginx2"}]}}
    creationTimestamp: "2024-01-08T14:46:29Z"
    labels:
      author: Asilbek
      project: practice
    name: nginx2
    namespace: s-40
    resourceVersion: "4023567"
    uid: 9311b3a7-b123-49f8-8ae6-857e632d1253
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mlngw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mlngw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:46:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:46:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:46:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-08T14:46:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4acd3f2a4c70a974395d473f2d7ad7923551c35e2055599f91c71eb7b7a8337a
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:2bdc49f2f8ae8d8dc50ed00f2ee56d00385c6f8bc8a8b320d0a294d9e3b49026
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-08T14:46:30Z"
    hostIP: 95.216.206.151
    phase: Running
    podIP: 10.233.67.136
    podIPs:
    - ip: 10.233.67.136
    qosClass: BestEffort
    startTime: "2024-01-08T14:46:29Z"
kind: List
metadata:
  resourceVersion: ""
